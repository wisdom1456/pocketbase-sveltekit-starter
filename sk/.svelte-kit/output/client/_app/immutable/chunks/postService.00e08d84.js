import{c}from"./index.6d88ee30.js";import{w as u}from"./index.b36f6ad1.js";import{a as l}from"./Alerts.9a8447ee.js";async function g(t){try{return await t()}catch(r){const{message:e,data:{data:a={}}={}}=r;e&&l.error(e);for(const o in a){const{message:s}=a[o];s&&l.error(`${o}: ${s}`)}return null}}async function d(t,r){try{const e=await fetch("/api/dreamstudio",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({prompt:t,engineId:r})});if(!e.ok){const o=await e.json();throw console.error(`Failed to generate image: ${e.statusText}`,o),new Error(`Failed to generate image: ${e.statusText}`)}return(await e.json()).id}catch(e){throw console.error("Error creating image:",e),e}}async function f(t){var r;if((r=t.expand)!=null&&r.featuredImage){const e=t.expand.featuredImage;if("file"in e&&"id"in e&&"collectionId"in e&&"collectionName"in e)try{return c.getFileUrl(e,e.file)}catch(a){return console.error("Error getting featured image URL:",a),"https://via.placeholder.com/800x400.png?text=cool+wind"}}}async function m(t){var r;if((r=t.expand)!=null&&r.tags)return t.expand.tags.map(e=>e.title);if(Array.isArray(t.tags)&&t.tags.length>0){const e=t.tags.map(a=>`id = "${a}"`).join(" || ");try{return(await c.collection("tags").getFullList(void 0,{filter:e})).map(o=>o.title)}catch(a){return console.error("Error fetching tags:",a),[]}}return[]}async function i(t){const r=await f(t),e=await m(t);return{...t,featuredImage:r,tags:e}}function h(){const{subscribe:t,set:r,update:e}=u({posts:[],page:1,perPage:20,totalPages:1});return{subscribe:t,set:r,update:e,appendPosts:(a,o)=>e(s=>({...s,posts:[...s.posts,...a],totalPages:o})),reset:()=>r({posts:[],page:1,perPage:20,totalPages:1})}}const p=h();async function x(){try{const t=await c.collection("posts").getList(1,20,{sort:"-updated",expand:"featuredImage,tags"});console.log("Fetched posts:",t.items),p.set({posts:t.items,page:t.page,perPage:t.perPage,totalPages:t.totalPages})}catch(t){console.error("Failed to fetch posts:",t)}}async function I(t){try{const r=encodeURIComponent(t),e=await c.collection("posts").getFirstListItem(`slug = "${r}"`,{expand:"featuredImage,tags"});return await i(e)}catch(r){throw console.error("Error fetching post:",r),r}}async function F(t,r,e){return await g(async()=>{const a=await d(r,e);if(a)t.featuredImage=a;else throw new Error("Failed to generate image");const o=await c.collection("posts").create(t),s=await i(o);return p.update(n=>({...n,posts:[...n.posts,s]})),s})}async function b(t){try{return await c.collection("subpost").getFullList(200,{filter:`post = "${t}"`,expand:"post"})}catch(r){throw console.error("Error fetching subposts:",r),r}}async function E(t,r){try{const e=await c.collection("posts").update(t,r),a=await i(e);return p.update(o=>{const s=o.posts.findIndex(n=>n.id===t);if(s!==-1){const n=[...o.posts];return n[s]=a,{...o,posts:n}}return o}),a}catch(e){return console.error("Error updating post:",e),null}}export{g as a,I as b,b as c,F as d,x as f,p,E as u};
